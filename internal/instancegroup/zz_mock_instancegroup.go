// Code generated by MockGen. DO NOT EDIT.
// Source: gitlab.com/hetznercloud/fleeting-plugin-hetzner/internal/instancegroup (interfaces: InstanceGroup)
//
// Generated by this command:
//
//	mockgen -package instancegroup -destination zz_mock_instancegroup.go gitlab.com/hetznercloud/fleeting-plugin-hetzner/internal/instancegroup InstanceGroup
//

// Package instancegroup is a generated GoMock package.
package instancegroup

import (
	context "context"
	reflect "reflect"

	hcloud "github.com/hetznercloud/hcloud-go/v2/hcloud"
	gomock "go.uber.org/mock/gomock"
)

// MockInstanceGroup is a mock of InstanceGroup interface.
type MockInstanceGroup struct {
	ctrl     *gomock.Controller
	recorder *MockInstanceGroupMockRecorder
}

// MockInstanceGroupMockRecorder is the mock recorder for MockInstanceGroup.
type MockInstanceGroupMockRecorder struct {
	mock *MockInstanceGroup
}

// NewMockInstanceGroup creates a new mock instance.
func NewMockInstanceGroup(ctrl *gomock.Controller) *MockInstanceGroup {
	mock := &MockInstanceGroup{ctrl: ctrl}
	mock.recorder = &MockInstanceGroupMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInstanceGroup) EXPECT() *MockInstanceGroupMockRecorder {
	return m.recorder
}

// Decrease mocks base method.
func (m *MockInstanceGroup) Decrease(arg0 context.Context, arg1 []int64) ([]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Decrease", arg0, arg1)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Decrease indicates an expected call of Decrease.
func (mr *MockInstanceGroupMockRecorder) Decrease(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Decrease", reflect.TypeOf((*MockInstanceGroup)(nil).Decrease), arg0, arg1)
}

// Get mocks base method.
func (m *MockInstanceGroup) Get(arg0 context.Context, arg1 int64) (*hcloud.Server, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*hcloud.Server)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockInstanceGroupMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockInstanceGroup)(nil).Get), arg0, arg1)
}

// Increase mocks base method.
func (m *MockInstanceGroup) Increase(arg0 context.Context, arg1 int) ([]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Increase", arg0, arg1)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Increase indicates an expected call of Increase.
func (mr *MockInstanceGroupMockRecorder) Increase(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Increase", reflect.TypeOf((*MockInstanceGroup)(nil).Increase), arg0, arg1)
}

// Init mocks base method.
func (m *MockInstanceGroup) Init(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init.
func (mr *MockInstanceGroupMockRecorder) Init(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockInstanceGroup)(nil).Init), arg0)
}

// List mocks base method.
func (m *MockInstanceGroup) List(arg0 context.Context) ([]*hcloud.Server, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].([]*hcloud.Server)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockInstanceGroupMockRecorder) List(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockInstanceGroup)(nil).List), arg0)
}
